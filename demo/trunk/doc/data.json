{
    "project": {
        "name": "dwv",
        "description": "Simple javascript/HTML5 (only) Dicom Web Viewer.",
        "version": "0.4.0beta",
        "url": "http://ivmartel.github.io/dwv/"
    },
    "files": {
        "src/dicom/dicomParser.js": {
            "name": "src/dicom/dicomParser.js",
            "modules": {
                "dicom": 1
            },
            "classes": {
                "dwv.dicom.DataReader": 1,
                "dwv.dicom.DicomParser": 1
            },
            "fors": {},
            "namespaces": {
                "dwv.dicom": 1
            }
        },
        "src/dicom/dictionary.js": {
            "name": "src/dicom/dictionary.js",
            "modules": {},
            "classes": {
                "dwv.dicom.Dictionary": 1
            },
            "fors": {},
            "namespaces": {
                "dwv.dicom": 1
            }
        },
        "src/html/gui.js": {
            "name": "src/html/gui.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/html/gui_mobile.js": {
            "name": "src/html/gui_mobile.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/html/gui_ui.js": {
            "name": "src/html/gui_ui.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/html/html.js": {
            "name": "src/html/html.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/html/layer.js": {
            "name": "src/html/layer.js",
            "modules": {},
            "classes": {
                "dwv.html.Layer": 1
            },
            "fors": {},
            "namespaces": {
                "dwv.html": 1
            }
        },
        "src/html/style.js": {
            "name": "src/html/style.js",
            "modules": {},
            "classes": {
                "dwv.html.Style": 1
            },
            "fors": {},
            "namespaces": {
                "dwv.html": 1
            }
        },
        "src/image/filter.js": {
            "name": "src/image/filter.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/image/image.js": {
            "name": "src/image/image.js",
            "modules": {},
            "classes": {
                "dwv.html.Image Size class. \nSupports 2D and 3D images.": 1,
                "dwv.html.Image Spacing class. \nSupports 2D and 3D images.": 1,
                "dwv.html.Image class.": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/image/luts.js": {
            "name": "src/image/luts.js",
            "modules": {},
            "classes": {
                "dwv.html.Rescale LUT class.": 1,
                "dwv.html.Window LUT class.": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/image/reader.js": {
            "name": "src/image/reader.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/image/view.js": {
            "name": "src/image/view.js",
            "modules": {},
            "classes": {
                "dwv.html.View class.": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/math/bucketQueue.js": {
            "name": "src/math/bucketQueue.js",
            "modules": {
                "math": 1
            },
            "classes": {
                "dwv.math.BucketQueue": 1
            },
            "fors": {},
            "namespaces": {
                "dwv.math": 1
            }
        },
        "src/math/scissors.js": {
            "name": "src/math/scissors.js",
            "modules": {},
            "classes": {
                "dwv.math.Scissors": 1
            },
            "fors": {},
            "namespaces": {
                "dwv.math": 1
            }
        },
        "src/math/shapes.js": {
            "name": "src/math/shapes.js",
            "modules": {},
            "classes": {
                "dwv.math.Point2D": 1,
                "dwv.math.FastPoint2D": 1,
                "dwv.math.Circle": 1,
                "dwv.math.Line": 1,
                "dwv.math.Rectangle": 1,
                "dwv.math.ROI": 1,
                "dwv.math.Path": 1
            },
            "fors": {},
            "namespaces": {
                "dwv.math": 1
            }
        },
        "src/tools/circle.js": {
            "name": "src/tools/circle.js",
            "modules": {},
            "classes": {
                "dwv.math.Draw circle command.": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/tools/draw.js": {
            "name": "src/tools/draw.js",
            "modules": {},
            "classes": {
                "dwv.math.Drawing tool.": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/tools/filter.js": {
            "name": "src/tools/filter.js",
            "modules": {},
            "classes": {
                "Filter classes..Filter tool.": 1,
                "Filter classes..Threshold filter tool.": 1,
                "Filter classes..Sharpen filter tool.": 1,
                "Filter classes..Sobel filter tool.": 1,
                "Filter classes..Run filter command.": 1
            },
            "fors": {},
            "namespaces": {
                "Filter classes.": 1
            }
        },
        "src/tools/info.js": {
            "name": "src/tools/info.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/tools/line.js": {
            "name": "src/tools/line.js",
            "modules": {},
            "classes": {
                "Filter classes..Draw line command.": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/tools/livewire.js": {
            "name": "src/tools/livewire.js",
            "modules": {},
            "classes": {
                "Filter classes..Livewire painting tool.": 1,
                "Filter classes..Draw livewire command.": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/tools/rectangle.js": {
            "name": "src/tools/rectangle.js",
            "modules": {},
            "classes": {
                "Filter classes..Draw rectangle command.": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/tools/roi.js": {
            "name": "src/tools/roi.js",
            "modules": {},
            "classes": {
                "Filter classes..Draw ROI command.": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/tools/toolbox.js": {
            "name": "src/tools/toolbox.js",
            "modules": {},
            "classes": {
                "Filter classes..Tool box.": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/tools/undo.js": {
            "name": "src/tools/undo.js",
            "modules": {},
            "classes": {
                "Filter classes..UndoStack class.": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/tools/windowLevel.js": {
            "name": "src/tools/windowLevel.js",
            "modules": {},
            "classes": {
                "Filter classes..WindowLevel tool: handle window/level related events.": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/tools/zoom.js": {
            "name": "src/tools/zoom.js",
            "modules": {},
            "classes": {
                "Filter classes..Zoom class.": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/utils/string.js": {
            "name": "src/utils/string.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/application.js": {
            "name": "src/application.js",
            "modules": {},
            "classes": {
                "Filter classes..App\nMain application.": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "dicom": {
            "name": "dicom",
            "submodules": {},
            "classes": {
                "dwv.dicom.DataReader": 1,
                "dwv.dicom.DicomParser": 1,
                "dwv.dicom.Dictionary": 1,
                "dwv.html.Layer": 1,
                "dwv.html.Style": 1,
                "dwv.html.Image Size class. \nSupports 2D and 3D images.": 1,
                "dwv.html.Image Spacing class. \nSupports 2D and 3D images.": 1,
                "dwv.html.Image class.": 1,
                "dwv.html.Rescale LUT class.": 1,
                "dwv.html.Window LUT class.": 1,
                "dwv.html.View class.": 1
            },
            "fors": {},
            "namespaces": {
                "dwv.dicom": 1,
                "dwv.html": 1
            },
            "tag": "module",
            "file": "src/image/view.js",
            "line": 6,
            "description": "DICOM module."
        },
        "math": {
            "name": "math",
            "submodules": {},
            "classes": {
                "dwv.math.BucketQueue": 1,
                "dwv.math.Scissors": 1,
                "dwv.math.Point2D": 1,
                "dwv.math.FastPoint2D": 1,
                "dwv.math.Circle": 1,
                "dwv.math.Line": 1,
                "dwv.math.Rectangle": 1,
                "dwv.math.ROI": 1,
                "dwv.math.Path": 1,
                "dwv.math.Draw circle command.": 1,
                "dwv.math.Drawing tool.": 1,
                "Filter classes..Filter tool.": 1,
                "Filter classes..Threshold filter tool.": 1,
                "Filter classes..Sharpen filter tool.": 1,
                "Filter classes..Sobel filter tool.": 1,
                "Filter classes..Run filter command.": 1,
                "Filter classes..Draw line command.": 1,
                "Filter classes..Livewire painting tool.": 1,
                "Filter classes..Draw livewire command.": 1,
                "Filter classes..Draw rectangle command.": 1,
                "Filter classes..Draw ROI command.": 1,
                "Filter classes..Tool box.": 1,
                "Filter classes..UndoStack class.": 1,
                "Filter classes..WindowLevel tool: handle window/level related events.": 1,
                "Filter classes..Zoom class.": 1,
                "Filter classes..App\nMain application.": 1
            },
            "fors": {},
            "namespaces": {
                "dwv.math": 1,
                "Filter classes.": 1
            },
            "tag": "module",
            "file": "src/application.js",
            "line": 4,
            "description": "Math module."
        }
    },
    "classes": {
        "dwv.dicom.DataReader": {
            "name": "dwv.dicom.DataReader",
            "shortname": "dwv.dicom.DataReader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "dicom",
            "namespace": "dwv.dicom",
            "file": "src/dicom/dicomParser.js",
            "line": 8,
            "description": "Data reader.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "buffer",
                    "description": "The input array buffer.",
                    "type": "Array"
                },
                {
                    "name": "isLittleEndian",
                    "description": "Flag to tell if the data is little or big endian.",
                    "type": "Boolean"
                }
            ]
        },
        "dwv.dicom.DicomParser": {
            "name": "dwv.dicom.DicomParser",
            "shortname": "dwv.dicom.DicomParser",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "dicom",
            "namespace": "dwv.dicom",
            "file": "src/dicom/dicomParser.js",
            "line": 142,
            "description": "DicomParser class.",
            "is_constructor": 1
        },
        "dwv.dicom.Dictionary": {
            "name": "dwv.dicom.Dictionary",
            "shortname": "dwv.dicom.Dictionary",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "dicom",
            "namespace": "dwv.dicom",
            "file": "src/dicom/dictionary.js",
            "line": 8,
            "description": "DICOM tag dictionary.",
            "is_constructor": 1
        },
        "dwv.html.Layer": {
            "name": "dwv.html.Layer",
            "shortname": "dwv.html.Layer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "dicom",
            "namespace": "dwv.html",
            "file": "src/html/layer.js",
            "line": 8,
            "description": "Window layer.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "name",
                    "description": "The name of the layer.",
                    "type": "String"
                }
            ]
        },
        "dwv.html.Style": {
            "name": "dwv.html.Style",
            "shortname": "dwv.html.Style",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "dicom",
            "namespace": "dwv.html",
            "file": "src/html/style.js",
            "line": 8,
            "description": "Style class.",
            "is_constructor": 1
        },
        "dwv.html.Image Size class. \nSupports 2D and 3D images.": {
            "name": "dwv.html.Image Size class. \nSupports 2D and 3D images.",
            "shortname": "Image Size class. \nSupports 2D and 3D images.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "dicom",
            "namespace": "dwv.html",
            "file": "src/image/image.js",
            "line": 6,
            "params": [
                {
                    "name": "numberOfColumns",
                    "description": "The number of columns (number)."
                },
                {
                    "name": "numberOfRows",
                    "description": "The number of rows (number)."
                },
                {
                    "name": "numberOfSlices",
                    "description": "The number of slices (number)."
                }
            ]
        },
        "dwv.html.Image Spacing class. \nSupports 2D and 3D images.": {
            "name": "dwv.html.Image Spacing class. \nSupports 2D and 3D images.",
            "shortname": "Image Spacing class. \nSupports 2D and 3D images.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "dicom",
            "namespace": "dwv.html",
            "file": "src/image/image.js",
            "line": 45,
            "params": [
                {
                    "name": "columnSpacing",
                    "description": "The column spacing (number)."
                },
                {
                    "name": "rowSpacing",
                    "description": "The row spacing (number)."
                },
                {
                    "name": "sliceSpacing",
                    "description": "The slice spacing (number)."
                }
            ]
        },
        "dwv.html.Image class.": {
            "name": "dwv.html.Image class.",
            "shortname": "Image class.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "dicom",
            "namespace": "dwv.html",
            "file": "src/image/image.js",
            "line": 69,
            "params": [
                {
                    "name": "size",
                    "description": "The sizes of the image."
                },
                {
                    "name": "spacing",
                    "description": "The spacings of the image."
                },
                {
                    "name": "_buffer",
                    "description": "The image data.\nUsable once created, optional are:\n- rescale slope and intercept (default 1:0), \n- photometric interpretation (default MONOCHROME2),\n- planar configuration (default RGBRGB...)."
                }
            ]
        },
        "dwv.html.Rescale LUT class.": {
            "name": "dwv.html.Rescale LUT class.",
            "shortname": "Rescale LUT class.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "dicom",
            "namespace": "dwv.html",
            "file": "src/image/luts.js",
            "line": 8,
            "return": {
                "description": "",
                "type": "Rescale"
            }
        },
        "dwv.html.Window LUT class.": {
            "name": "dwv.html.Window LUT class.",
            "shortname": "Window LUT class.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "dicom",
            "namespace": "dwv.html",
            "file": "src/image/luts.js",
            "line": 39,
            "return": {
                "description": "",
                "type": "Window"
            }
        },
        "dwv.html.View class.": {
            "name": "dwv.html.View class.",
            "shortname": "View class.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "dicom",
            "namespace": "dwv.html",
            "file": "src/image/view.js",
            "line": 6,
            "params": [
                {
                    "name": "image",
                    "description": "The associated image.\nNeed to set the window lookup table once created\n(either directly or with helper methods)."
                }
            ]
        },
        "dwv.math.BucketQueue": {
            "name": "dwv.math.BucketQueue",
            "shortname": "dwv.math.BucketQueue",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "math",
            "namespace": "dwv.math",
            "file": "src/math/bucketQueue.js",
            "line": 8,
            "description": "Circular Bucket Queue.\n\nReturns input'd points in sorted order. All operations run in roughly O(1)\ntime (for input with small cost values), but it has a strict requirement:\n\nIf the most recent point had a cost of c, any points added should have a cost\nc' in the range c <= c' <= c + (capacity - 1).",
            "is_constructor": 1,
            "input": "cost_functor"
        },
        "dwv.math.Scissors": {
            "name": "dwv.math.Scissors",
            "shortname": "dwv.math.Scissors",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "math",
            "namespace": "dwv.math",
            "file": "src/math/scissors.js",
            "line": 278,
            "description": "Scissors",
            "is_constructor": 1
        },
        "dwv.math.Point2D": {
            "name": "dwv.math.Point2D",
            "shortname": "dwv.math.Point2D",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "math",
            "namespace": "dwv.math",
            "file": "src/math/shapes.js",
            "line": 8,
            "description": "2D point. Immutable.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "The X coordinate for the point.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The Y coordinate for the point.",
                    "type": "Number"
                }
            ]
        },
        "dwv.math.FastPoint2D": {
            "name": "dwv.math.FastPoint2D",
            "shortname": "dwv.math.FastPoint2D",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "math",
            "namespace": "dwv.math",
            "file": "src/math/shapes.js",
            "line": 54,
            "description": "Fast 2D point since it's mutable!",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "The X coordinate for the point.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The Y coordinate for the point.",
                    "type": "Number"
                }
            ]
        },
        "dwv.math.Circle": {
            "name": "dwv.math.Circle",
            "shortname": "dwv.math.Circle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "math",
            "namespace": "dwv.math",
            "file": "src/math/shapes.js",
            "line": 90,
            "description": "Circle shape.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "centre",
                    "description": "A Point2D representing the centre of the circle.",
                    "type": "Object"
                },
                {
                    "name": "radius",
                    "description": "The radius of the circle.",
                    "type": "Object"
                }
            ]
        },
        "dwv.math.Line": {
            "name": "dwv.math.Line",
            "shortname": "dwv.math.Line",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "math",
            "namespace": "dwv.math",
            "file": "src/math/shapes.js",
            "line": 139,
            "description": "Line shape.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "begin",
                    "description": "A Point2D representing the beginning of the line.",
                    "type": "Object"
                },
                {
                    "name": "end",
                    "description": "A Point2D representing the end of the line.",
                    "type": "Object"
                }
            ]
        },
        "dwv.math.Rectangle": {
            "name": "dwv.math.Rectangle",
            "shortname": "dwv.math.Rectangle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "math",
            "namespace": "dwv.math",
            "file": "src/math/shapes.js",
            "line": 203,
            "description": "Rectangle shape.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "begin",
                    "description": "A Point2D representing the beginning of the rectangle.",
                    "type": "Object"
                },
                {
                    "name": "end",
                    "description": "A Point2D representing the end of the rectangle.",
                    "type": "Object"
                }
            ]
        },
        "dwv.math.ROI": {
            "name": "dwv.math.ROI",
            "shortname": "dwv.math.ROI",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "math",
            "namespace": "dwv.math",
            "file": "src/math/shapes.js",
            "line": 274,
            "description": "Region Of Interest shape.",
            "is_constructor": 1
        },
        "dwv.math.Path": {
            "name": "dwv.math.Path",
            "shortname": "dwv.math.Path",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "math",
            "namespace": "dwv.math",
            "file": "src/math/shapes.js",
            "line": 318,
            "description": "Path shape.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "inputPointArray",
                    "description": "The list of Point2D that make the path (optional).",
                    "type": "Array"
                },
                {
                    "name": "inputControlPointIndexArray",
                    "description": "The list of control point of path, \n as indexes (optional).\nNote: first and last point do not need to be equal.",
                    "type": "Array"
                }
            ]
        },
        "dwv.math.Draw circle command.": {
            "name": "dwv.math.Draw circle command.",
            "shortname": "Draw circle command.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "math",
            "namespace": "dwv.math",
            "file": "src/tools/circle.js",
            "line": 6,
            "params": [
                {
                    "name": "points",
                    "description": "The points from which to extract the circle."
                },
                {
                    "name": "app",
                    "description": "The application to draw the circle on."
                },
                {
                    "name": "style",
                    "description": "The drawing style."
                }
            ]
        },
        "dwv.math.Drawing tool.": {
            "name": "dwv.math.Drawing tool.",
            "shortname": "Drawing tool.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "math",
            "namespace": "dwv.math",
            "file": "src/tools/draw.js",
            "line": 14
        },
        "Filter classes..Filter tool.": {
            "name": "Filter classes..Filter tool.",
            "shortname": "Filter tool.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "math",
            "namespace": "Filter classes.",
            "file": "src/tools/filter.js",
            "line": 9
        },
        "Filter classes..Threshold filter tool.": {
            "name": "Filter classes..Threshold filter tool.",
            "shortname": "Threshold filter tool.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "math",
            "namespace": "Filter classes.",
            "file": "src/tools/filter.js",
            "line": 76
        },
        "Filter classes..Sharpen filter tool.": {
            "name": "Filter classes..Sharpen filter tool.",
            "shortname": "Sharpen filter tool.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "math",
            "namespace": "Filter classes.",
            "file": "src/tools/filter.js",
            "line": 105
        },
        "Filter classes..Sobel filter tool.": {
            "name": "Filter classes..Sobel filter tool.",
            "shortname": "Sobel filter tool.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "math",
            "namespace": "Filter classes.",
            "file": "src/tools/filter.js",
            "line": 132
        },
        "Filter classes..Run filter command.": {
            "name": "Filter classes..Run filter command.",
            "shortname": "Run filter command.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "math",
            "namespace": "Filter classes.",
            "file": "src/tools/filter.js",
            "line": 164,
            "params": [
                {
                    "name": "filter",
                    "description": "The filter to run."
                },
                {
                    "name": "app",
                    "description": "The application to draw the line on."
                }
            ]
        },
        "Filter classes..Draw line command.": {
            "name": "Filter classes..Draw line command.",
            "shortname": "Draw line command.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "math",
            "namespace": "Filter classes.",
            "file": "src/tools/line.js",
            "line": 6,
            "params": [
                {
                    "name": "points",
                    "description": "The points from which to extract the line."
                },
                {
                    "name": "app",
                    "description": "The application to draw the line on."
                },
                {
                    "name": "style",
                    "description": "The drawing style."
                }
            ]
        },
        "Filter classes..Livewire painting tool.": {
            "name": "Filter classes..Livewire painting tool.",
            "shortname": "Livewire painting tool.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "math",
            "namespace": "Filter classes.",
            "file": "src/tools/livewire.js",
            "line": 6
        },
        "Filter classes..Draw livewire command.": {
            "name": "Filter classes..Draw livewire command.",
            "shortname": "Draw livewire command.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "math",
            "namespace": "Filter classes.",
            "file": "src/tools/livewire.js",
            "line": 178,
            "params": [
                {
                    "name": "livewire",
                    "description": "The livewire to draw."
                },
                {
                    "name": "app",
                    "description": "The application to draw the livewire on."
                }
            ]
        },
        "Filter classes..Draw rectangle command.": {
            "name": "Filter classes..Draw rectangle command.",
            "shortname": "Draw rectangle command.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "math",
            "namespace": "Filter classes.",
            "file": "src/tools/rectangle.js",
            "line": 6,
            "params": [
                {
                    "name": "points",
                    "description": "The points from which to extract the circle."
                },
                {
                    "name": "app",
                    "description": "The application to draw the line on."
                },
                {
                    "name": "style",
                    "description": "The drawing style."
                }
            ]
        },
        "Filter classes..Draw ROI command.": {
            "name": "Filter classes..Draw ROI command.",
            "shortname": "Draw ROI command.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "math",
            "namespace": "Filter classes.",
            "file": "src/tools/roi.js",
            "line": 6,
            "params": [
                {
                    "name": "points",
                    "description": "The points from which to extract the line."
                },
                {
                    "name": "app",
                    "description": "The application to draw the line on."
                },
                {
                    "name": "style",
                    "description": "The drawing style."
                }
            ]
        },
        "Filter classes..Tool box.": {
            "name": "Filter classes..Tool box.",
            "shortname": "Tool box.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "math",
            "namespace": "Filter classes.",
            "file": "src/tools/toolbox.js",
            "line": 9
        },
        "Filter classes..UndoStack class.": {
            "name": "Filter classes..UndoStack class.",
            "shortname": "UndoStack class.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "math",
            "namespace": "Filter classes.",
            "file": "src/tools/undo.js",
            "line": 6,
            "params": [
                {
                    "name": "app",
                    "description": ""
                }
            ]
        },
        "Filter classes..WindowLevel tool: handle window/level related events.": {
            "name": "Filter classes..WindowLevel tool: handle window/level related events.",
            "shortname": "WindowLevel tool: handle window/level related events.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "math",
            "namespace": "Filter classes.",
            "file": "src/tools/windowLevel.js",
            "line": 53
        },
        "Filter classes..Zoom class.": {
            "name": "Filter classes..Zoom class.",
            "shortname": "Zoom class.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "math",
            "namespace": "Filter classes.",
            "file": "src/tools/zoom.js",
            "line": 17
        },
        "Filter classes..App\nMain application.": {
            "name": "Filter classes..App\nMain application.",
            "shortname": "App\nMain application.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "math",
            "namespace": "Filter classes.",
            "file": "src/application.js",
            "line": 4
        }
    },
    "classitems": [
        {
            "file": "src/dicom/dicomParser.js",
            "line": 18,
            "description": "The main data view.",
            "itemtype": "property",
            "name": "view",
            "access": "private",
            "tagname": "",
            "type": "DataView",
            "class": "dwv.dicom.DataReader",
            "module": "dicom",
            "namespace": "dwv.dicom"
        },
        {
            "file": "src/dicom/dicomParser.js",
            "line": 28,
            "description": "Read Uint8 (1 byte) data.",
            "itemtype": "method",
            "name": "readUint8",
            "params": [
                {
                    "name": "byteOffset",
                    "description": "The offset to start reading from.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The read data.",
                "type": "Number"
            },
            "class": "dwv.dicom.DataReader",
            "module": "dicom",
            "namespace": "dwv.dicom"
        },
        {
            "file": "src/dicom/dicomParser.js",
            "line": 37,
            "description": "Read Uint16 (2 bytes) data.",
            "itemtype": "method",
            "name": "readUint16",
            "params": [
                {
                    "name": "byteOffset",
                    "description": "The offset to start reading from.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The read data.",
                "type": "Number"
            },
            "class": "dwv.dicom.DataReader",
            "module": "dicom",
            "namespace": "dwv.dicom"
        },
        {
            "file": "src/dicom/dicomParser.js",
            "line": 46,
            "description": "Read Uint32 (4 bytes) data.",
            "itemtype": "method",
            "name": "readUint32",
            "params": [
                {
                    "name": "byteOffset",
                    "description": "The offset to start reading from.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The read data.",
                "type": "Number"
            },
            "class": "dwv.dicom.DataReader",
            "module": "dicom",
            "namespace": "dwv.dicom"
        },
        {
            "file": "src/dicom/dicomParser.js",
            "line": 55,
            "description": "Read Float32 (8 bytes) data.",
            "itemtype": "method",
            "name": "readFloat32",
            "params": [
                {
                    "name": "byteOffset",
                    "description": "The offset to start reading from.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The read data.",
                "type": "Number"
            },
            "class": "dwv.dicom.DataReader",
            "module": "dicom",
            "namespace": "dwv.dicom"
        },
        {
            "file": "src/dicom/dicomParser.js",
            "line": 64,
            "description": "Read Uint data of nBytes size.",
            "itemtype": "method",
            "name": "readNumber",
            "params": [
                {
                    "name": "byteOffset",
                    "description": "The offset to start reading from.",
                    "type": "Number"
                },
                {
                    "name": "nBytes",
                    "description": "The number of bytes to read.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The read data.",
                "type": "Number"
            },
            "class": "dwv.dicom.DataReader",
            "module": "dicom",
            "namespace": "dwv.dicom"
        },
        {
            "file": "src/dicom/dicomParser.js",
            "line": 83,
            "description": "Read Uint8 array.",
            "itemtype": "method",
            "name": "readUint8Array",
            "params": [
                {
                    "name": "byteOffset",
                    "description": "The offset to start reading from.",
                    "type": "Number"
                },
                {
                    "name": "size",
                    "description": "The size of the array.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The read data.",
                "type": "Array"
            },
            "class": "dwv.dicom.DataReader",
            "module": "dicom",
            "namespace": "dwv.dicom"
        },
        {
            "file": "src/dicom/dicomParser.js",
            "line": 98,
            "description": "Read Uint16 array.",
            "itemtype": "method",
            "name": "readUint16Array",
            "params": [
                {
                    "name": "byteOffset",
                    "description": "The offset to start reading from.",
                    "type": "Number"
                },
                {
                    "name": "size",
                    "description": "The size of the array.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The read data.",
                "type": "Array"
            },
            "class": "dwv.dicom.DataReader",
            "module": "dicom",
            "namespace": "dwv.dicom"
        },
        {
            "file": "src/dicom/dicomParser.js",
            "line": 113,
            "description": "Read data as an hexadecimal string.",
            "itemtype": "method",
            "name": "readHex",
            "params": [
                {
                    "name": "byteOffset",
                    "description": "The offset to start reading from.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The read data.",
                "type": "Array"
            },
            "class": "dwv.dicom.DataReader",
            "module": "dicom",
            "namespace": "dwv.dicom"
        },
        {
            "file": "src/dicom/dicomParser.js",
            "line": 125,
            "description": "Read data as a string.",
            "itemtype": "method",
            "name": "readString",
            "params": [
                {
                    "name": "byteOffset",
                    "description": "The offset to start reading from.",
                    "type": "Number"
                },
                {
                    "name": "nChars",
                    "description": "The numner of characters to read.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The read data.",
                "type": "String"
            },
            "class": "dwv.dicom.DataReader",
            "module": "dicom",
            "namespace": "dwv.dicom"
        },
        {
            "file": "src/dicom/dicomParser.js",
            "line": 150,
            "description": "The list of DICOM elements.",
            "itemtype": "property",
            "name": "dicomElements",
            "type": "Array",
            "class": "dwv.dicom.DicomParser",
            "module": "dicom",
            "namespace": "dwv.dicom"
        },
        {
            "file": "src/dicom/dicomParser.js",
            "line": 156,
            "description": "The number of DICOM Items.",
            "itemtype": "property",
            "name": "numberOfItems",
            "type": "Number",
            "class": "dwv.dicom.DicomParser",
            "module": "dicom",
            "namespace": "dwv.dicom"
        },
        {
            "file": "src/dicom/dicomParser.js",
            "line": 162,
            "description": "The DICOM dictionary used to find tag names.",
            "itemtype": "property",
            "name": "dict",
            "type": "Dictionary",
            "class": "dwv.dicom.DicomParser",
            "module": "dicom",
            "namespace": "dwv.dicom"
        },
        {
            "file": "src/dicom/dicomParser.js",
            "line": 168,
            "description": "The pixel buffer.",
            "itemtype": "property",
            "name": "pixelBuffer",
            "type": "Array",
            "class": "dwv.dicom.DicomParser",
            "module": "dicom",
            "namespace": "dwv.dicom"
        },
        {
            "file": "src/dicom/dicomParser.js",
            "line": 176,
            "description": "Get the DICOM data pixel buffer.",
            "itemtype": "method",
            "name": "getPixelBuffer",
            "return": {
                "description": "The pixel buffer.",
                "type": "Array"
            },
            "class": "dwv.dicom.DicomParser",
            "module": "dicom",
            "namespace": "dwv.dicom"
        },
        {
            "file": "src/dicom/dicomParser.js",
            "line": 186,
            "description": "Append a DICOM element to the dicomElements member object.\nAllows for easy retrieval of DICOM tag values from the tag name.\nIf tags have same name (for the 'unknown' and private tags cases), a number is appended\nmaking the name unique.",
            "itemtype": "method",
            "name": "appendDicomElement",
            "params": [
                {
                    "name": "element",
                    "description": "The element to add.",
                    "type": "Object"
                }
            ],
            "class": "dwv.dicom.DicomParser",
            "module": "dicom",
            "namespace": "dwv.dicom"
        },
        {
            "file": "src/dicom/dicomParser.js",
            "line": 215,
            "description": "Read a DICOM tag.",
            "itemtype": "method",
            "name": "readTag",
            "params": [
                {
                    "name": "reader",
                    "description": "The raw data reader."
                },
                {
                    "name": "offset",
                    "description": "The offset where to start to read."
                }
            ],
            "return": {
                "description": "An object containing the tags 'group', 'element' and 'name'."
            },
            "class": "dwv.dicom.DicomParser",
            "module": "dicom",
            "namespace": "dwv.dicom"
        },
        {
            "file": "src/dicom/dicomParser.js",
            "line": 239,
            "description": "Read a DICOM data element.",
            "itemtype": "method",
            "name": "readDataElement",
            "params": [
                {
                    "name": "reader",
                    "description": "The raw data reader."
                },
                {
                    "name": "offset",
                    "description": "The offset where to start to read."
                },
                {
                    "name": "implicit",
                    "description": "Is the DICOM VR implicit?"
                }
            ],
            "return": {
                "description": "An object containing the element 'tag', 'vl', 'vr', 'data' and 'offset'.",
                "type": "Object"
            },
            "class": "dwv.dicom.DicomParser",
            "module": "dicom",
            "namespace": "dwv.dicom"
        },
        {
            "file": "src/dicom/dicomParser.js",
            "line": 332,
            "description": "Parse the complete DICOM file (given as input to the class).\nFills in the member object 'dicomElements'.",
            "itemtype": "method",
            "name": "parse",
            "params": [
                {
                    "name": "buffer",
                    "description": "The input array buffer."
                }
            ],
            "class": "dwv.dicom.DicomParser",
            "module": "dicom",
            "namespace": "dwv.dicom"
        },
        {
            "file": "src/dicom/dicomParser.js",
            "line": 506,
            "description": "Get an Image object from the read DICOM file.",
            "itemtype": "method",
            "name": "createImage",
            "return": {
                "description": "A new Image.",
                "type": "View"
            },
            "class": "dwv.dicom.DicomParser",
            "module": "dicom",
            "namespace": "dwv.dicom"
        },
        {
            "file": "src/dicom/dictionary.js",
            "line": 15,
            "description": "Tag definition storage.",
            "itemtype": "property",
            "name": "newDictionary",
            "type": "Array",
            "class": "dwv.dicom.Dictionary",
            "module": "dicom",
            "namespace": "dwv.dicom"
        },
        {
            "file": "src/dicom/dictionary.js",
            "line": 23,
            "description": "Fill in the dictionary array.",
            "itemtype": "method",
            "name": "init",
            "class": "dwv.dicom.Dictionary",
            "module": "dicom",
            "namespace": "dwv.dicom"
        },
        {
            "file": "src/html/gui.js",
            "line": 8,
            "description": "Handle window/level change.",
            "itemtype": "method",
            "name": "onChangeWindowLevelPreset",
            "static": 1,
            "params": [
                {
                    "name": "event",
                    "description": "The change event.",
                    "type": "Object"
                }
            ],
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/gui.js",
            "line": 19,
            "description": "Handle colour map change.",
            "itemtype": "method",
            "name": "onChangeColourMap",
            "static": 1,
            "params": [
                {
                    "name": "event",
                    "description": "The change event.",
                    "type": "Object"
                }
            ],
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/gui.js",
            "line": 30,
            "description": "Handle tool change.",
            "itemtype": "method",
            "name": "onChangeTool",
            "static": 1,
            "params": [
                {
                    "name": "event",
                    "description": "The change event.",
                    "type": "Object"
                }
            ],
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/gui.js",
            "line": 41,
            "description": "Handle filter change.",
            "itemtype": "method",
            "name": "onChangeFilter",
            "static": 1,
            "params": [
                {
                    "name": "event",
                    "description": "The change event.",
                    "type": "Object"
                }
            ],
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/gui.js",
            "line": 52,
            "description": "Handle shape change.",
            "itemtype": "method",
            "name": "onChangeShape",
            "static": 1,
            "params": [
                {
                    "name": "event",
                    "description": "The change event.",
                    "type": "Object"
                }
            ],
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/gui.js",
            "line": 63,
            "description": "Handle line color change.",
            "itemtype": "method",
            "name": "onChangeLineColour",
            "static": 1,
            "params": [
                {
                    "name": "event",
                    "description": "The change event.",
                    "type": "Object"
                }
            ],
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/gui.js",
            "line": 74,
            "description": "Append the toolbox HTML to the page.",
            "itemtype": "method",
            "name": "appendToolboxHtml",
            "static": 1,
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/gui.js",
            "line": 105,
            "description": "Append the window/level HTML to the page.",
            "itemtype": "method",
            "name": "appendWindowLevelHtml",
            "static": 1,
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/gui.js",
            "line": 153,
            "description": "Clear the window/level HTML.",
            "itemtype": "method",
            "name": "clearWindowLevelHtml",
            "static": 1,
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/gui.js",
            "line": 164,
            "description": "Append the draw HTML to the page.",
            "itemtype": "method",
            "name": "appendDrawHtml",
            "static": 1,
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/gui.js",
            "line": 209,
            "description": "Clear the draw HTML.",
            "itemtype": "method",
            "name": "clearDrawHtml",
            "static": 1,
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/gui.js",
            "line": 220,
            "description": "Append the color chooser HTML to the page.",
            "itemtype": "method",
            "name": "appendLivewireHtml",
            "static": 1,
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/gui.js",
            "line": 248,
            "description": "Clear the color chooser HTML.",
            "itemtype": "method",
            "name": "clearDrawHtml",
            "static": 1,
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/gui.js",
            "line": 258,
            "description": "Append the filter HTML to the page.",
            "itemtype": "method",
            "name": "appendLivewireHtml",
            "static": 1,
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/gui.js",
            "line": 286,
            "description": "Clear the filter HTML.",
            "itemtype": "method",
            "name": "clearDrawHtml",
            "static": 1,
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/gui.js",
            "line": 299,
            "description": "Append the threshold filter HTML to the page.",
            "itemtype": "method",
            "name": "appendThresholdHtml",
            "static": 1,
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/gui.js",
            "line": 319,
            "description": "Clear the treshold filter HTML.",
            "itemtype": "method",
            "name": "clearDrawHtml",
            "static": 1,
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/gui.js",
            "line": 329,
            "description": "Append the sharpen filter HTML to the page.",
            "itemtype": "method",
            "name": "appendSharpenHtml",
            "static": 1,
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/gui.js",
            "line": 354,
            "description": "Clear the sharpen filter HTML.",
            "itemtype": "method",
            "name": "clearSharpenHtml",
            "static": 1,
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/gui.js",
            "line": 364,
            "description": "Append the sobel filter HTML to the page.",
            "itemtype": "method",
            "name": "appendSharpenHtml",
            "static": 1,
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/gui.js",
            "line": 389,
            "description": "Clear the sobel filter HTML.",
            "itemtype": "method",
            "name": "clearSharpenHtml",
            "static": 1,
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/gui.js",
            "line": 399,
            "description": "Append the zoom HTML to the page.",
            "itemtype": "method",
            "name": "appendZoomHtml",
            "static": 1,
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/gui.js",
            "line": 426,
            "description": "Clear the zoom filter HTML.",
            "itemtype": "method",
            "name": "clearZoomHtml",
            "static": 1,
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/gui.js",
            "line": 436,
            "description": "Append the undo HTML to the page.",
            "itemtype": "method",
            "name": "appendUndoHtml",
            "static": 1,
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/gui.js",
            "line": 461,
            "description": "Add a command to the undo HTML.",
            "itemtype": "method",
            "name": "addCommandToUndoHtml",
            "static": 1,
            "params": [
                {
                    "name": "commandName",
                    "description": "The name of the command to add.",
                    "type": "String"
                }
            ],
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/gui.js",
            "line": 488,
            "description": "Enable the last command of the undo HTML.",
            "itemtype": "method",
            "name": "enableInUndoHtml",
            "static": 1,
            "params": [
                {
                    "name": "enable",
                    "description": "Flag to enable or disable the command.",
                    "type": "Boolean"
                }
            ],
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/gui_mobile.js",
            "line": 8,
            "description": "Append the slider HTML.",
            "itemtype": "method",
            "name": "getSliderHtml",
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/gui_mobile.js",
            "line": 48,
            "description": "Update the progress bar.",
            "itemtype": "method",
            "name": "updateProgress",
            "params": [
                {
                    "name": "event",
                    "description": "A ProgressEvent.",
                    "type": "Object"
                }
            ],
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/gui_ui.js",
            "line": 8,
            "description": "Append the slider HTML.",
            "itemtype": "method",
            "name": "getSliderHtml",
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/gui_ui.js",
            "line": 29,
            "description": "Update the progress bar.",
            "itemtype": "method",
            "name": "updateProgress",
            "params": [
                {
                    "name": "event",
                    "description": "A ProgressEvent.",
                    "type": "Object"
                }
            ],
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/html.js",
            "line": 8,
            "itemtype": "method",
            "name": "Append a cell to a given row.",
            "params": [
                {
                    "name": "row",
                    "description": "The row to append the cell to."
                },
                {
                    "name": "text",
                    "description": "The text of the cell."
                }
            ],
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/html.js",
            "line": 19,
            "itemtype": "method",
            "name": "Append a header cell to a given row.",
            "params": [
                {
                    "name": "row",
                    "description": "The row to append the header cell to."
                },
                {
                    "name": "text",
                    "description": "The text of the header cell."
                }
            ],
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/html.js",
            "line": 33,
            "itemtype": "method",
            "name": "",
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/html.js",
            "line": 59,
            "itemtype": "method",
            "name": "",
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/html.js",
            "line": 101,
            "itemtype": "method",
            "name": "",
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/html.js",
            "line": 119,
            "itemtype": "method",
            "name": "Converts the input to an HTML table.",
            "input": "input Allowed types are: array, array of object, object.",
            "warning": "Null is interpreted differently in browsers, firefox will not display it.",
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/html.js",
            "line": 131,
            "itemtype": "method",
            "name": "",
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/html.js",
            "line": 147,
            "itemtype": "method",
            "name": "",
            "params": [
                {
                    "name": "term",
                    "description": ""
                },
                {
                    "name": "table",
                    "description": ""
                }
            ],
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/html.js",
            "line": 177,
            "itemtype": "method",
            "name": "Transform back each\n<span>preText <span class=\"highlighted\">term</span> postText</span>\ninto its original preText term postText",
            "params": [
                {
                    "name": "container",
                    "description": "The container to de-highlight."
                }
            ],
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/html.js",
            "line": 203,
            "itemtype": "method",
            "name": "Create a\n<span>preText <span class=\"highlighted\">term</span> postText</span>\naround each search term",
            "params": [
                {
                    "name": "term",
                    "description": "The term to highlight."
                },
                {
                    "name": "container",
                    "description": "The container where to highlight the term."
                }
            ],
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/html.js",
            "line": 245,
            "itemtype": "method",
            "name": "",
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/html.js",
            "line": 256,
            "itemtype": "method",
            "name": "Remove all children of a node.",
            "params": [
                {
                    "name": "nodeId",
                    "description": "The id of the node to delete."
                },
                {
                    "name": "parentId",
                    "description": "The id of the parent of the node to delete."
                }
            ],
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/html.js",
            "line": 268,
            "itemtype": "method",
            "name": "Remove all children of a node and then remove it from its parent.",
            "params": [
                {
                    "name": "nodeId",
                    "description": "The id of the node to delete."
                },
                {
                    "name": "parentId",
                    "description": "The id of the parent of the node to delete."
                }
            ],
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/html.js",
            "line": 285,
            "itemtype": "method",
            "name": "Create a HTML select from an input array of options.\nThe values of the options are the name of the option made lower case.\nIt is left to the user to set the 'onchange' method of the select.",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the HTML select."
                },
                {
                    "name": "list",
                    "description": "The list of options of the HTML select."
                }
            ],
            "return": {
                "description": "The created HTML select."
            },
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/html.js",
            "line": 410,
            "description": "Browser checks to see if it can run dwv...\nTODO Maybe use http://modernizr.com/.",
            "class": "dwv.html.Layer",
            "module": "dicom"
        },
        {
            "file": "src/html/layer.js",
            "line": 107,
            "description": "Reset the layout",
            "class": "dwv.html.Layer",
            "module": "dicom",
            "namespace": "dwv.html"
        },
        {
            "file": "src/html/layer.js",
            "line": 118,
            "description": "Draw the content (imageData) of the layer.\nThe imageData variable needs to be set",
            "class": "dwv.html.Layer",
            "module": "dicom",
            "namespace": "dwv.html"
        },
        {
            "file": "src/html/layer.js",
            "line": 141,
            "description": "Initialise the layer: set the canvas and context",
            "input": "height The height of the canvas.",
            "class": "dwv.html.Layer",
            "module": "dicom",
            "namespace": "dwv.html"
        },
        {
            "file": "src/html/layer.js",
            "line": 176,
            "description": "Fill the full context with the current style.",
            "class": "dwv.html.Layer",
            "module": "dicom",
            "namespace": "dwv.html"
        },
        {
            "file": "src/html/layer.js",
            "line": 184,
            "description": "Clear the full context.",
            "class": "dwv.html.Layer",
            "module": "dicom",
            "namespace": "dwv.html"
        },
        {
            "file": "src/html/layer.js",
            "line": 192,
            "description": "Merge two layers.",
            "input": "layerToMerge The layer to merge. It will also be emptied.",
            "class": "dwv.html.Layer",
            "module": "dicom",
            "namespace": "dwv.html"
        },
        {
            "file": "src/html/layer.js",
            "line": 208,
            "description": "Set the fill and stroke style of the context.",
            "class": "dwv.html.Layer",
            "module": "dicom",
            "namespace": "dwv.html"
        },
        {
            "file": "src/html/layer.js",
            "line": 217,
            "description": "Display the layer.",
            "class": "dwv.html.Layer",
            "module": "dicom",
            "namespace": "dwv.html"
        },
        {
            "file": "src/html/layer.js",
            "line": 238,
            "description": "Align on another layer.",
            "class": "dwv.html.Layer",
            "module": "dicom",
            "namespace": "dwv.html"
        },
        {
            "file": "src/html/style.js",
            "line": 25,
            "description": "Get the font size.",
            "itemtype": "method",
            "name": "getFontSize",
            "return": {
                "description": "The font size.",
                "type": "Number"
            },
            "class": "dwv.html.Style",
            "module": "dicom",
            "namespace": "dwv.html"
        },
        {
            "file": "src/html/style.js",
            "line": 34,
            "description": "Get the font definition string.",
            "itemtype": "method",
            "name": "getFontStr",
            "return": {
                "description": "The font definition string.",
                "type": "String"
            },
            "class": "dwv.html.Style",
            "module": "dicom",
            "namespace": "dwv.html"
        },
        {
            "file": "src/html/style.js",
            "line": 43,
            "description": "Get the line height.",
            "itemtype": "method",
            "name": "getLineHeight",
            "return": {
                "description": "The line height.",
                "type": "Number"
            },
            "class": "dwv.html.Style",
            "module": "dicom",
            "namespace": "dwv.html"
        },
        {
            "file": "src/html/style.js",
            "line": 52,
            "description": "Get the text color.",
            "itemtype": "method",
            "name": "getTextColor",
            "return": {
                "description": "The text color.",
                "type": "String"
            },
            "class": "dwv.html.Style",
            "module": "dicom",
            "namespace": "dwv.html"
        },
        {
            "file": "src/html/style.js",
            "line": 61,
            "description": "Get the line color.",
            "itemtype": "method",
            "name": "getLineColor",
            "return": {
                "description": "The line color.",
                "type": "String"
            },
            "class": "dwv.html.Style",
            "module": "dicom",
            "namespace": "dwv.html"
        },
        {
            "file": "src/html/style.js",
            "line": 70,
            "description": "Set the line color.",
            "itemtype": "method",
            "name": "setLineColor",
            "params": [
                {
                    "name": "color",
                    "description": "The line color.",
                    "type": "String"
                }
            ],
            "class": "dwv.html.Style",
            "module": "dicom",
            "namespace": "dwv.html"
        },
        {
            "file": "src/image/filter.js",
            "line": 8,
            "itemtype": "method",
            "name": "Threshold an image between an input minimum and maximum.",
            "params": [
                {
                    "name": "min",
                    "description": "The new minimum."
                },
                {
                    "name": "max",
                    "description": "The new maximum."
                }
            ],
            "class": "dwv.html.Image Size class. \nSupports 2D and 3D images.",
            "module": "dicom",
            "namespace": "dwv.html"
        },
        {
            "file": "src/image/filter.js",
            "line": 40,
            "itemtype": "method",
            "name": "Sharpen an image using a sharpen convolution matrix.",
            "class": "dwv.html.Image Size class. \nSupports 2D and 3D images.",
            "module": "dicom",
            "namespace": "dwv.html"
        },
        {
            "file": "src/image/filter.js",
            "line": 57,
            "itemtype": "method",
            "name": "Apply a Sobel filter to an image.",
            "class": "dwv.html.Image Size class. \nSupports 2D and 3D images.",
            "module": "dicom",
            "namespace": "dwv.html"
        },
        {
            "file": "src/image/image.js",
            "line": 238,
            "description": "Get the value of the image at a specific coordinate.",
            "params": [
                {
                    "name": "i",
                    "description": "The X index."
                },
                {
                    "name": "j",
                    "description": "The Y index."
                },
                {
                    "name": "k",
                    "description": "The Z index."
                }
            ],
            "return": {
                "description": "The value at the desired position.\nWarning: No size check..."
            },
            "class": "dwv.html.Image class.",
            "module": "dicom",
            "namespace": "dwv.html"
        },
        {
            "file": "src/image/image.js",
            "line": 253,
            "description": "Get the value of the image at a specific offset.",
            "params": [
                {
                    "name": "offset",
                    "description": "The offset in the buffer."
                }
            ],
            "return": {
                "description": "The value at the desired offset.\nWarning: No size check..."
            },
            "class": "dwv.html.Image class.",
            "module": "dicom",
            "namespace": "dwv.html"
        },
        {
            "file": "src/image/image.js",
            "line": 264,
            "description": "Get the value of the image at a specific coordinate.",
            "params": [
                {
                    "name": "i",
                    "description": "The X index."
                },
                {
                    "name": "j",
                    "description": "The Y index."
                },
                {
                    "name": "k",
                    "description": "The Z index."
                }
            ],
            "return": {
                "description": "The value at the desired position.\nWarning: No size check..."
            },
            "class": "dwv.html.Image class.",
            "module": "dicom",
            "namespace": "dwv.html"
        },
        {
            "file": "src/image/image.js",
            "line": 277,
            "description": "Calculate the raw image data range.",
            "return": {
                "description": "The range .",
                "type": "Min, max"
            },
            "class": "dwv.html.Image class.",
            "module": "dicom",
            "namespace": "dwv.html"
        },
        {
            "file": "src/image/image.js",
            "line": 295,
            "description": "Calculate the image data range after rescale.",
            "return": {
                "description": "The range .",
                "type": "Min, max"
            },
            "class": "dwv.html.Image class.",
            "module": "dicom",
            "namespace": "dwv.html"
        },
        {
            "file": "src/image/image.js",
            "line": 306,
            "description": "Calculate the histogram of the image.",
            "return": {
                "description": "An array representing the histogram."
            },
            "class": "dwv.html.Image class.",
            "module": "dicom",
            "namespace": "dwv.html"
        },
        {
            "file": "src/image/image.js",
            "line": 333,
            "description": "Convolute the image with a given 2D kernel.",
            "params": [
                {
                    "name": "weights",
                    "description": "The weights of the 2D kernel."
                }
            ],
            "return": {
                "description": "The convoluted image.\n\nNote: Uses the raw buffer values."
            },
            "class": "dwv.html.Image class.",
            "module": "dicom",
            "namespace": "dwv.html"
        },
        {
            "file": "src/image/image.js",
            "line": 386,
            "description": "Transform an image using a specific operator.",
            "params": [
                {
                    "name": "operator",
                    "description": "The operator to use when transforming."
                }
            ],
            "return": {
                "description": "The transformed image.\n\nNote: Uses the raw buffer values."
            },
            "class": "dwv.html.Image class.",
            "module": "dicom",
            "namespace": "dwv.html"
        },
        {
            "file": "src/image/image.js",
            "line": 404,
            "description": "Compose this image with another one and using a specific operator.",
            "params": [
                {
                    "name": "rhs",
                    "description": "The image to compose with."
                },
                {
                    "name": "operator",
                    "description": "The operator to use when composing."
                }
            ],
            "return": {
                "description": "The composed image.\n\nNote: Uses the raw buffer values."
            },
            "class": "dwv.html.Image class.",
            "module": "dicom",
            "namespace": "dwv.html"
        },
        {
            "file": "src/image/luts.js",
            "line": 95,
            "description": "Lookup tables for image color display.",
            "class": "dwv.html.Window LUT class.",
            "module": "dicom",
            "namespace": "dwv.html"
        },
        {
            "file": "src/image/reader.js",
            "line": 6,
            "description": "Get data from an input image using a canvas.",
            "params": [
                {
                    "name": "image",
                    "description": "The image."
                },
                {
                    "name": "file",
                    "description": "The corresponding file."
                }
            ],
            "class": "dwv.html.View class.",
            "module": "dicom",
            "namespace": "dwv.html"
        },
        {
            "file": "src/image/reader.js",
            "line": 55,
            "description": "Get data from an input buffer using a DICOM parser.",
            "params": [
                {
                    "name": "buffer",
                    "description": "The input data buffer."
                }
            ],
            "class": "dwv.html.View class.",
            "module": "dicom",
            "namespace": "dwv.html"
        },
        {
            "file": "src/image/view.js",
            "line": 86,
            "description": "Set the view window/level.",
            "params": [
                {
                    "name": "center",
                    "description": "The window center."
                },
                {
                    "name": "width",
                    "description": "The window width."
                }
            ],
            "warning": "Uses the latest set rescale LUT or the default linear one.",
            "class": "dwv.html.View class.",
            "module": "dicom",
            "namespace": "dwv.html"
        },
        {
            "file": "src/image/view.js",
            "line": 98,
            "description": "Set the image window/level to cover the full data range.",
            "warning": "Uses the latest set rescale LUT or the default linear one.",
            "class": "dwv.html.View class.",
            "module": "dicom",
            "namespace": "dwv.html"
        },
        {
            "file": "src/image/view.js",
            "line": 114,
            "description": "Increment the current slice number.\nReturns false if not in bounds.",
            "class": "dwv.html.View class.",
            "module": "dicom",
            "namespace": "dwv.html"
        },
        {
            "file": "src/image/view.js",
            "line": 126,
            "description": "Decrement the current slice number.\nReturns false if not in bounds.",
            "class": "dwv.html.View class.",
            "module": "dicom",
            "namespace": "dwv.html"
        },
        {
            "file": "src/image/view.js",
            "line": 138,
            "description": "Clone the image using all meta data and the original data buffer.",
            "return": {
                "description": "A full copy of this .",
                "type": "dwv.image.Image"
            },
            "class": "dwv.html.View class.",
            "module": "dicom",
            "namespace": "dwv.html"
        },
        {
            "file": "src/image/view.js",
            "line": 151,
            "description": "Generate display image data to be given to a canvas.",
            "params": [
                {
                    "name": "array",
                    "description": "The array to fill in."
                },
                {
                    "name": "sliceNumber",
                    "description": "The slice position."
                }
            ],
            "class": "dwv.html.View class.",
            "module": "dicom",
            "namespace": "dwv.html"
        },
        {
            "file": "src/image/view.js",
            "line": 235,
            "description": "Add an event listener on the view.",
            "params": [
                {
                    "name": "type",
                    "description": "The event type."
                },
                {
                    "name": "listener",
                    "description": "The method associated with the provided event type."
                }
            ],
            "class": "dwv.html.View class.",
            "module": "dicom",
            "namespace": "dwv.html"
        },
        {
            "file": "src/image/view.js",
            "line": 247,
            "description": "Remove an event listener on the view.",
            "params": [
                {
                    "name": "type",
                    "description": "The event type."
                },
                {
                    "name": "listener",
                    "description": "The method associated with the provided event type."
                }
            ],
            "class": "dwv.html.View class.",
            "module": "dicom",
            "namespace": "dwv.html"
        },
        {
            "file": "src/image/view.js",
            "line": 263,
            "description": "Fire an event: call all associated listeners.",
            "params": [
                {
                    "name": "event",
                    "description": "The event to fire."
                }
            ],
            "class": "dwv.html.View class.",
            "module": "dicom",
            "namespace": "dwv.html"
        },
        {
            "file": "src/math/scissors.js",
            "line": 11,
            "class": "dwv.math.Scissors",
            "module": "math"
        },
        {
            "file": "src/math/scissors.js",
            "line": 67,
            "class": "dwv.math.Scissors",
            "module": "math"
        },
        {
            "file": "src/math/scissors.js",
            "line": 107,
            "class": "dwv.math.Scissors",
            "module": "math"
        },
        {
            "file": "src/math/shapes.js",
            "line": 18,
            "description": "Get the X position of the point.",
            "itemtype": "method",
            "name": "getX",
            "return": {
                "description": "The X position of the point.",
                "type": "Number"
            },
            "class": "dwv.math.Point2D",
            "module": "math",
            "namespace": "dwv.math"
        },
        {
            "file": "src/math/shapes.js",
            "line": 24,
            "description": "Get the Y position of the point.",
            "itemtype": "method",
            "name": "getY",
            "return": {
                "description": "The Y position of the point.",
                "type": "Number"
            },
            "class": "dwv.math.Point2D",
            "module": "math",
            "namespace": "dwv.math"
        },
        {
            "file": "src/math/shapes.js",
            "line": 32,
            "description": "Check for Point2D equality.",
            "itemtype": "method",
            "name": "equals",
            "params": [
                {
                    "name": "other",
                    "description": "The other Point2D to compare to.",
                    "type": "Point2D"
                }
            ],
            "return": {
                "description": "True if both points are equal.",
                "type": "Boolean"
            },
            "class": "dwv.math.Point2D",
            "module": "math",
            "namespace": "dwv.math"
        },
        {
            "file": "src/math/shapes.js",
            "line": 45,
            "description": "Get a string representation of the Point2D.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "The Point2D as a string.",
                "type": "String"
            },
            "class": "dwv.math.Point2D",
            "module": "math",
            "namespace": "dwv.math"
        },
        {
            "file": "src/math/shapes.js",
            "line": 68,
            "description": "Check for FastPoint2D equality.",
            "itemtype": "method",
            "name": "equals",
            "params": [
                {
                    "name": "other",
                    "description": "The other FastPoint2D to compare to.",
                    "type": "FastPoint2D"
                }
            ],
            "return": {
                "description": "True if both points are equal.",
                "type": "Boolean"
            },
            "class": "dwv.math.FastPoint2D",
            "module": "math",
            "namespace": "dwv.math"
        },
        {
            "file": "src/math/shapes.js",
            "line": 81,
            "description": "Get a string representation of the FastPoint2D.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "The Point2D as a string.",
                "type": "String"
            },
            "class": "dwv.math.FastPoint2D",
            "module": "math",
            "namespace": "dwv.math"
        },
        {
            "file": "src/math/shapes.js",
            "line": 100,
            "description": "Circle surface.",
            "itemtype": "property",
            "name": "surface",
            "access": "private",
            "tagname": "",
            "type": "Number",
            "class": "dwv.math.Circle",
            "module": "math",
            "namespace": "dwv.math"
        },
        {
            "file": "src/math/shapes.js",
            "line": 108,
            "description": "Get the centre (point) of the circle.",
            "itemtype": "method",
            "name": "getCenter",
            "return": {
                "description": "The center (point) of the circle.",
                "type": "Object"
            },
            "class": "dwv.math.Circle",
            "module": "math",
            "namespace": "dwv.math"
        },
        {
            "file": "src/math/shapes.js",
            "line": 114,
            "description": "Get the radius of the circle.",
            "itemtype": "method",
            "name": "getRadius",
            "return": {
                "description": "The radius of the circle.",
                "type": "Number"
            },
            "class": "dwv.math.Circle",
            "module": "math",
            "namespace": "dwv.math"
        },
        {
            "file": "src/math/shapes.js",
            "line": 120,
            "description": "Get the surface of the circle.",
            "itemtype": "method",
            "name": "getSurface",
            "return": {
                "description": "The surface of the circle.",
                "type": "Number"
            },
            "class": "dwv.math.Circle",
            "module": "math",
            "namespace": "dwv.math"
        },
        {
            "file": "src/math/shapes.js",
            "line": 126,
            "description": "Get the surface of the circle with a spacing.",
            "itemtype": "method",
            "name": "getWorldSurface",
            "params": [
                {
                    "name": "spacingX",
                    "description": "The X spacing.",
                    "type": "Number"
                },
                {
                    "name": "spacingY",
                    "description": "The Y spacing.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The surface of the circle multiplied by the given spacing.",
                "type": "Number"
            },
            "class": "dwv.math.Circle",
            "module": "math",
            "namespace": "dwv.math"
        },
        {
            "file": "src/math/shapes.js",
            "line": 149,
            "description": "Line length.",
            "itemtype": "property",
            "name": "length",
            "access": "private",
            "tagname": "",
            "type": "Number",
            "class": "dwv.math.Line",
            "module": "math",
            "namespace": "dwv.math"
        },
        {
            "file": "src/math/shapes.js",
            "line": 159,
            "description": "Get the begin point of the line.",
            "itemtype": "method",
            "name": "getBegin",
            "return": {
                "description": "The beginning point of the line.",
                "type": "Object"
            },
            "class": "dwv.math.Line",
            "module": "math",
            "namespace": "dwv.math"
        },
        {
            "file": "src/math/shapes.js",
            "line": 165,
            "description": "Get the end point of the line.",
            "itemtype": "method",
            "name": "getEnd",
            "return": {
                "description": "The ending point of the line.",
                "type": "Object"
            },
            "class": "dwv.math.Line",
            "module": "math",
            "namespace": "dwv.math"
        },
        {
            "file": "src/math/shapes.js",
            "line": 171,
            "description": "Get the length of the line.",
            "itemtype": "method",
            "name": "getLength",
            "return": {
                "description": "The length of the line.",
                "type": "Number"
            },
            "class": "dwv.math.Line",
            "module": "math",
            "namespace": "dwv.math"
        },
        {
            "file": "src/math/shapes.js",
            "line": 177,
            "description": "Get the length of the line with spacing.",
            "itemtype": "method",
            "name": "getWorldLength",
            "params": [
                {
                    "name": "spacingX",
                    "description": "The X spacing.",
                    "type": "Number"
                },
                {
                    "name": "spacingY",
                    "description": "The Y spacing.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The length of the line with spacing.",
                "type": "Number"
            },
            "class": "dwv.math.Line",
            "module": "math",
            "namespace": "dwv.math"
        },
        {
            "file": "src/math/shapes.js",
            "line": 190,
            "description": "Get the mid point of the line.",
            "itemtype": "method",
            "name": "getMidpoint",
            "return": {
                "description": "The mid point of the line.",
                "type": "Object"
            },
            "class": "dwv.math.Line",
            "module": "math",
            "namespace": "dwv.math"
        },
        {
            "file": "src/math/shapes.js",
            "line": 213,
            "description": "Rectangle surface.",
            "itemtype": "property",
            "name": "surface",
            "access": "private",
            "tagname": "",
            "type": "Number",
            "class": "dwv.math.Rectangle",
            "module": "math",
            "namespace": "dwv.math"
        },
        {
            "file": "src/math/shapes.js",
            "line": 221,
            "description": "Get the begin point of the rectangle.",
            "itemtype": "method",
            "name": "getBegin",
            "return": {
                "description": "The begin point of the rectangle",
                "type": "Object"
            },
            "class": "dwv.math.Rectangle",
            "module": "math",
            "namespace": "dwv.math"
        },
        {
            "file": "src/math/shapes.js",
            "line": 227,
            "description": "Get the end point of the rectangle.",
            "itemtype": "method",
            "name": "getEnd",
            "return": {
                "description": "The end point of the rectangle",
                "type": "Object"
            },
            "class": "dwv.math.Rectangle",
            "module": "math",
            "namespace": "dwv.math"
        },
        {
            "file": "src/math/shapes.js",
            "line": 233,
            "description": "Get the real width of the rectangle.",
            "itemtype": "method",
            "name": "getRealWidth",
            "return": {
                "description": "The real width of the rectangle.",
                "type": "Number"
            },
            "class": "dwv.math.Rectangle",
            "module": "math",
            "namespace": "dwv.math"
        },
        {
            "file": "src/math/shapes.js",
            "line": 239,
            "description": "Get the real height of the rectangle.",
            "itemtype": "method",
            "name": "getRealHeight",
            "return": {
                "description": "The real height of the rectangle.",
                "type": "Number"
            },
            "class": "dwv.math.Rectangle",
            "module": "math",
            "namespace": "dwv.math"
        },
        {
            "file": "src/math/shapes.js",
            "line": 245,
            "description": "Get the width of the rectangle.",
            "itemtype": "method",
            "name": "getWidth",
            "return": {
                "description": "The width of the rectangle.",
                "type": "Number"
            },
            "class": "dwv.math.Rectangle",
            "module": "math",
            "namespace": "dwv.math"
        },
        {
            "file": "src/math/shapes.js",
            "line": 251,
            "description": "Get the height of the rectangle.",
            "itemtype": "method",
            "name": "getHeight",
            "return": {
                "description": "The height of the rectangle.",
                "type": "Number"
            },
            "class": "dwv.math.Rectangle",
            "module": "math",
            "namespace": "dwv.math"
        },
        {
            "file": "src/math/shapes.js",
            "line": 257,
            "description": "Get the surface of the rectangle.",
            "itemtype": "method",
            "name": "getSurface",
            "return": {
                "description": "The surface of the rectangle.",
                "type": "Number"
            },
            "class": "dwv.math.Rectangle",
            "module": "math",
            "namespace": "dwv.math"
        },
        {
            "file": "src/math/shapes.js",
            "line": 263,
            "description": "Get the surface of the rectangle with a spacing.",
            "itemtype": "method",
            "name": "getWorldSurface",
            "return": {
                "description": "The surface of the rectangle with a spacing.",
                "type": "Number"
            },
            "class": "dwv.math.Rectangle",
            "module": "math",
            "namespace": "dwv.math"
        },
        {
            "file": "src/math/shapes.js",
            "line": 283,
            "description": "List of points.",
            "itemtype": "property",
            "name": "points",
            "access": "private",
            "tagname": "",
            "type": "Array",
            "class": "dwv.math.ROI",
            "module": "math",
            "namespace": "dwv.math"
        },
        {
            "file": "src/math/shapes.js",
            "line": 291,
            "description": "Get a point of the list at a given index.",
            "itemtype": "method",
            "name": "getPoint",
            "params": [
                {
                    "name": "index",
                    "description": "The index of the point to get (beware, no size check).",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Point2D at the given index.",
                "type": "Object"
            },
            "class": "dwv.math.ROI",
            "module": "math",
            "namespace": "dwv.math"
        },
        {
            "file": "src/math/shapes.js",
            "line": 298,
            "description": "Get the length of the point list.",
            "itemtype": "method",
            "name": "getLength",
            "return": {
                "description": "The length of the point list.",
                "type": "Number"
            },
            "class": "dwv.math.ROI",
            "module": "math",
            "namespace": "dwv.math"
        },
        {
            "file": "src/math/shapes.js",
            "line": 304,
            "description": "Add a point to the ROI.",
            "itemtype": "method",
            "name": "addPoint",
            "params": [
                {
                    "name": "point",
                    "description": "The Point2D to add.",
                    "type": "Object"
                }
            ],
            "class": "dwv.math.ROI",
            "module": "math",
            "namespace": "dwv.math"
        },
        {
            "file": "src/math/shapes.js",
            "line": 310,
            "description": "Add points to the ROI.",
            "itemtype": "method",
            "name": "addPoints",
            "params": [
                {
                    "name": "rhs",
                    "description": "The array of POints2D to add.",
                    "type": "Array"
                }
            ],
            "class": "dwv.math.ROI",
            "module": "math",
            "namespace": "dwv.math"
        },
        {
            "file": "src/math/shapes.js",
            "line": 330,
            "description": "List of points.",
            "itemtype": "property",
            "name": "pointArray",
            "type": "Array",
            "class": "dwv.math.Path",
            "module": "math",
            "namespace": "dwv.math"
        },
        {
            "file": "src/math/shapes.js",
            "line": 336,
            "description": "List of control points.",
            "itemtype": "property",
            "name": "controlPointIndexArray",
            "type": "Array",
            "class": "dwv.math.Path",
            "module": "math",
            "namespace": "dwv.math"
        },
        {
            "file": "src/math/shapes.js",
            "line": 345,
            "description": "Get a point of the list.",
            "itemtype": "method",
            "name": "getPoint",
            "params": [
                {
                    "name": "index",
                    "description": "The index of the point to get (beware, no size check).",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Point2D at the given index.",
                "type": "Object"
            },
            "class": "dwv.math.Path",
            "module": "math",
            "namespace": "dwv.math"
        },
        {
            "file": "src/math/shapes.js",
            "line": 355,
            "description": "Is the given point a control point.",
            "itemtype": "method",
            "name": "isControlPoint",
            "params": [
                {
                    "name": "point",
                    "description": "The Point2D to check.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "True if a control point.",
                "type": "Boolean"
            },
            "class": "dwv.math.Path",
            "module": "math",
            "namespace": "dwv.math"
        },
        {
            "file": "src/math/shapes.js",
            "line": 371,
            "description": "Get the length of the path.",
            "itemtype": "method",
            "name": "getLength",
            "return": {
                "description": "The length of the path.",
                "type": "Number"
            },
            "class": "dwv.math.Path",
            "module": "math",
            "namespace": "dwv.math"
        },
        {
            "file": "src/math/shapes.js",
            "line": 380,
            "description": "Add a point to the path.",
            "itemtype": "method",
            "name": "addPoint",
            "params": [
                {
                    "name": "point",
                    "description": "The Point2D to add.",
                    "type": "Object"
                }
            ],
            "class": "dwv.math.Path",
            "module": "math",
            "namespace": "dwv.math"
        },
        {
            "file": "src/math/shapes.js",
            "line": 389,
            "description": "Add a control point to the path.",
            "itemtype": "method",
            "name": "addControlPoint",
            "params": [
                {
                    "name": "point",
                    "description": "The Point2D to make a control point.",
                    "type": "Object"
                }
            ],
            "class": "dwv.math.Path",
            "module": "math",
            "namespace": "dwv.math"
        },
        {
            "file": "src/math/shapes.js",
            "line": 404,
            "description": "Add points to the path.",
            "itemtype": "method",
            "name": "addPoints",
            "params": [
                {
                    "name": "points",
                    "description": "The list of Point2D to add.",
                    "type": "Array"
                }
            ],
            "class": "dwv.math.Path",
            "module": "math",
            "namespace": "dwv.math"
        },
        {
            "file": "src/math/shapes.js",
            "line": 413,
            "description": "Append a Path to this one.",
            "itemtype": "method",
            "name": "appenPath",
            "params": [
                {
                    "name": "other",
                    "description": "The Path to append.",
                    "type": "Path"
                }
            ],
            "class": "dwv.math.Path",
            "module": "math",
            "namespace": "dwv.math"
        },
        {
            "file": "src/tools/filter.js",
            "line": 71,
            "class": "Filter classes..Filter tool.",
            "module": "math",
            "namespace": "Filter classes."
        },
        {
            "file": "src/tools/info.js",
            "line": 6,
            "itemtype": "method",
            "name": "Create the windowing info div.",
            "class": "Filter classes..Draw line command.",
            "module": "math",
            "namespace": "Filter classes."
        },
        {
            "file": "src/tools/info.js",
            "line": 28,
            "itemtype": "method",
            "name": "Update the Top Right info div.",
            "params": [
                {
                    "name": "event",
                    "description": "The windowing change event containing the new values.\nWarning: expects the windowing info div to exist (use after createWindowingDiv)."
                }
            ],
            "class": "Filter classes..Draw line command.",
            "module": "math",
            "namespace": "Filter classes."
        },
        {
            "file": "src/tools/info.js",
            "line": 45,
            "itemtype": "method",
            "name": "Create the position info div.",
            "class": "Filter classes..Draw line command.",
            "module": "math",
            "namespace": "Filter classes."
        },
        {
            "file": "src/tools/info.js",
            "line": 67,
            "itemtype": "method",
            "name": "Update the position info div.",
            "params": [
                {
                    "name": "event",
                    "description": "The position change event containing the new values.\nWarning: expects the position info div to exist (use after createPositionDiv)."
                }
            ],
            "class": "Filter classes..Draw line command.",
            "module": "math",
            "namespace": "Filter classes."
        },
        {
            "file": "src/tools/info.js",
            "line": 84,
            "itemtype": "method",
            "name": "Create the mini color map info div.",
            "class": "Filter classes..Draw line command.",
            "module": "math",
            "namespace": "Filter classes."
        },
        {
            "file": "src/tools/info.js",
            "line": 100,
            "itemtype": "method",
            "name": "Update the mini color map info div.",
            "params": [
                {
                    "name": "event",
                    "description": "The windowing change event containing the new values.\nWarning: expects the mini color map div to exist (use after createMiniColorMap)."
                }
            ],
            "class": "Filter classes..Draw line command.",
            "module": "math",
            "namespace": "Filter classes."
        },
        {
            "file": "src/tools/info.js",
            "line": 150,
            "itemtype": "method",
            "name": "Create the plot info.",
            "class": "Filter classes..Draw line command.",
            "module": "math",
            "namespace": "Filter classes."
        },
        {
            "file": "src/tools/info.js",
            "line": 163,
            "itemtype": "method",
            "name": "Update the plot markings.",
            "params": [
                {
                    "name": "event",
                    "description": "The windowing change event containing the new values.\nWarning: expects the plot to exist (use after createPlot)."
                }
            ],
            "class": "Filter classes..Draw line command.",
            "module": "math",
            "namespace": "Filter classes."
        },
        {
            "file": "src/tools/undo.js",
            "line": 17,
            "description": "Add a command to the stack.",
            "params": [
                {
                    "name": "cmd",
                    "description": "The command to add."
                }
            ],
            "class": "Filter classes..UndoStack class.",
            "module": "math",
            "namespace": "Filter classes."
        },
        {
            "file": "src/tools/undo.js",
            "line": 33,
            "description": "Undo the last command.",
            "class": "Filter classes..UndoStack class.",
            "module": "math",
            "namespace": "Filter classes."
        },
        {
            "file": "src/tools/undo.js",
            "line": 67,
            "description": "Redo the last command.",
            "class": "Filter classes..UndoStack class.",
            "module": "math",
            "namespace": "Filter classes."
        },
        {
            "file": "src/tools/windowLevel.js",
            "line": 6,
            "fileoverview": "WindowLevel tool.",
            "class": "Filter classes..WindowLevel tool: handle window/level related events.",
            "module": "math",
            "namespace": "Filter classes."
        },
        {
            "file": "src/tools/windowLevel.js",
            "line": 10,
            "itemtype": "method",
            "name": "Update the views' current position.",
            "class": "Filter classes..WindowLevel tool: handle window/level related events.",
            "module": "math",
            "namespace": "Filter classes."
        },
        {
            "file": "src/tools/windowLevel.js",
            "line": 18,
            "itemtype": "method",
            "name": "Update the views' windowing data",
            "class": "Filter classes..WindowLevel tool: handle window/level related events.",
            "module": "math",
            "namespace": "Filter classes."
        },
        {
            "file": "src/tools/windowLevel.js",
            "line": 26,
            "itemtype": "method",
            "name": "Update the views' colour map.",
            "class": "Filter classes..WindowLevel tool: handle window/level related events.",
            "module": "math",
            "namespace": "Filter classes."
        },
        {
            "file": "src/tools/windowLevel.js",
            "line": 188,
            "itemtype": "method",
            "name": "Update the window/level presets.",
            "class": "Filter classes..WindowLevel tool: handle window/level related events.",
            "module": "math",
            "namespace": "Filter classes."
        },
        {
            "file": "src/tools/windowLevel.js",
            "line": 217,
            "itemtype": "method",
            "name": "Set the window/level presets.",
            "class": "Filter classes..WindowLevel tool: handle window/level related events.",
            "module": "math",
            "namespace": "Filter classes."
        },
        {
            "file": "src/tools/windowLevel.js",
            "line": 231,
            "itemtype": "method",
            "name": "Set the colour map.",
            "class": "Filter classes..WindowLevel tool: handle window/level related events.",
            "module": "math",
            "namespace": "Filter classes."
        },
        {
            "file": "src/tools/zoom.js",
            "line": 6,
            "itemtype": "method",
            "name": "",
            "class": "Filter classes..Zoom class.",
            "module": "math",
            "namespace": "Filter classes."
        },
        {
            "file": "src/utils/string.js",
            "line": 6,
            "itemtype": "method",
            "name": "Capitalise the first letter of a string.",
            "class": "Filter classes..App\nMain application.",
            "module": "math",
            "namespace": "Filter classes."
        },
        {
            "file": "src/utils/string.js",
            "line": 14,
            "itemtype": "method",
            "name": "Clean string.",
            "class": "Filter classes..App\nMain application.",
            "module": "math",
            "namespace": "Filter classes."
        },
        {
            "file": "src/utils/string.js",
            "line": 27,
            "description": "root?key0=val0&key1=val1 returns [{\"key\"=\"key0\", \"value\"=\"val0\"}, {\"key\"=\"key1\", \"value\"=\"val1\"}]\nReturns null if not a query string (no question mark).",
            "class": "Filter classes..App\nMain application.",
            "module": "math",
            "namespace": "Filter classes."
        },
        {
            "file": "src/application.js",
            "line": 67,
            "description": "Initialise the HTML for the application.",
            "class": "Filter classes..App\nMain application.",
            "module": "math",
            "namespace": "Filter classes."
        },
        {
            "file": "src/application.js",
            "line": 84,
            "description": "Handle key event.\n- CRTL-Z: undo\n- CRTL-Y: redo\nDefault behavior. Usually used in tools.",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "class": "Filter classes..App\nMain application.",
            "module": "math",
            "namespace": "Filter classes."
        },
        {
            "file": "src/application.js",
            "line": 103,
            "access": "public",
            "tagname": "",
            "class": "Filter classes..App\nMain application.",
            "module": "math",
            "namespace": "Filter classes."
        },
        {
            "file": "src/application.js",
            "line": 111,
            "access": "public",
            "tagname": "",
            "class": "Filter classes..App\nMain application.",
            "module": "math",
            "namespace": "Filter classes."
        },
        {
            "file": "src/application.js",
            "line": 188,
            "access": "public",
            "tagname": "",
            "class": "Filter classes..App\nMain application.",
            "module": "math",
            "namespace": "Filter classes."
        },
        {
            "file": "src/application.js",
            "line": 196,
            "access": "public",
            "tagname": "",
            "class": "Filter classes..App\nMain application.",
            "module": "math",
            "namespace": "Filter classes."
        },
        {
            "file": "src/application.js",
            "line": 272,
            "description": "Generate the image data and draw it.",
            "class": "Filter classes..App\nMain application.",
            "module": "math",
            "namespace": "Filter classes."
        },
        {
            "file": "src/application.js",
            "line": 285,
            "description": "To be called once the image is loaded.",
            "class": "Filter classes..App\nMain application.",
            "module": "math",
            "namespace": "Filter classes."
        },
        {
            "file": "src/application.js",
            "line": 306,
            "description": "To be called once the image is loaded.",
            "class": "Filter classes..App\nMain application.",
            "module": "math",
            "namespace": "Filter classes."
        },
        {
            "file": "src/application.js",
            "line": 315,
            "description": "Toggle the display of the info layer.",
            "class": "Filter classes..App\nMain application.",
            "module": "math",
            "namespace": "Filter classes."
        },
        {
            "file": "src/application.js",
            "line": 336,
            "description": "Add image listeners.",
            "class": "Filter classes..App\nMain application.",
            "module": "math",
            "namespace": "Filter classes."
        },
        {
            "file": "src/application.js",
            "line": 348,
            "description": "Remove image listeners.",
            "class": "Filter classes..App\nMain application.",
            "module": "math",
            "namespace": "Filter classes."
        },
        {
            "file": "src/application.js",
            "line": 360,
            "access": "private",
            "tagname": "The general-purpose event handler. This function just determines the mouse \nposition relative to the canvas element.",
            "class": "Filter classes..App\nMain application.",
            "module": "math",
            "namespace": "Filter classes."
        },
        {
            "file": "src/application.js",
            "line": 435,
            "access": "private",
            "tagname": "",
            "class": "Filter classes..App\nMain application.",
            "module": "math",
            "namespace": "Filter classes."
        },
        {
            "file": "src/application.js",
            "line": 445,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "dataWidth",
                    "description": "The width of the input data."
                },
                {
                    "name": "dataHeight",
                    "description": "The height of the input data."
                }
            ],
            "class": "Filter classes..App\nMain application.",
            "module": "math",
            "namespace": "Filter classes."
        },
        {
            "file": "src/application.js",
            "line": 470,
            "access": "private",
            "tagname": "Create the DICOM tags table.",
            "params": [
                {
                    "name": "dataInfo",
                    "description": "The data information.\nTo be called once the DICOM has been parsed."
                }
            ],
            "class": "Filter classes..App\nMain application.",
            "module": "math",
            "namespace": "Filter classes."
        },
        {
            "file": "src/application.js",
            "line": 498,
            "access": "private",
            "tagname": "To be called once the DICOM has been parsed.",
            "class": "Filter classes..App\nMain application.",
            "module": "math",
            "namespace": "Filter classes."
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/dicom/dicomParser.js:176"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/dicom/dicomParser.js:215"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/dicom/dicomParser.js:239"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/dicom/dicomParser.js:506"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/html/html.js:19"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/html/html.js:33"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/html/html.js:59"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/html/html.js:101"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/html/html.js:119"
        },
        {
            "message": "unknown tag: input",
            "line": " src/html/html.js:119"
        },
        {
            "message": "unknown tag: warning",
            "line": " src/html/html.js:119"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/html/html.js:131"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/html/html.js:147"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/html/html.js:177"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/html/html.js:203"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/html/html.js:245"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/html/html.js:256"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/html/html.js:268"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/html/html.js:285"
        },
        {
            "message": "unknown tag: input",
            "line": " src/html/layer.js:141"
        },
        {
            "message": "unknown tag: input",
            "line": " src/html/layer.js:141"
        },
        {
            "message": "unknown tag: input",
            "line": " src/html/layer.js:192"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/image/filter.js:8"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/image/filter.js:40"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/image/filter.js:57"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/image/image.js:238"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/image/image.js:253"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/image/image.js:264"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/image/image.js:277"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/image/image.js:295"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/image/image.js:306"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/image/image.js:333"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/image/image.js:386"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/image/image.js:404"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/image/luts.js:8"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/image/luts.js:39"
        },
        {
            "message": "unknown tag: warning",
            "line": " src/image/view.js:86"
        },
        {
            "message": "unknown tag: warning",
            "line": " src/image/view.js:98"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/image/view.js:138"
        },
        {
            "message": "unknown tag: input",
            "line": " src/math/bucketQueue.js:8"
        },
        {
            "message": "unknown tag: input",
            "line": " src/math/bucketQueue.js:8"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/tools/info.js:6"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/tools/info.js:28"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/tools/info.js:45"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/tools/info.js:67"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/tools/info.js:84"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/tools/info.js:100"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/tools/info.js:150"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/tools/info.js:163"
        },
        {
            "message": "unknown tag: fileoverview",
            "line": " src/tools/windowLevel.js:6"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/tools/windowLevel.js:10"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/tools/windowLevel.js:18"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/tools/windowLevel.js:26"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/tools/windowLevel.js:188"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/tools/windowLevel.js:217"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/tools/windowLevel.js:231"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/tools/zoom.js:6"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/utils/string.js:6"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/utils/string.js:14"
        },
        {
            "message": "Missing item type\nBrowser checks to see if it can run dwv...\nTODO Maybe use http://modernizr.com/.",
            "line": " src/html/html.js:410"
        },
        {
            "message": "Missing item type\nReset the layout",
            "line": " src/html/layer.js:107"
        },
        {
            "message": "Missing item type\nDraw the content (imageData) of the layer.\nThe imageData variable needs to be set",
            "line": " src/html/layer.js:118"
        },
        {
            "message": "Missing item type\nInitialise the layer: set the canvas and context",
            "line": " src/html/layer.js:141"
        },
        {
            "message": "Missing item type\nFill the full context with the current style.",
            "line": " src/html/layer.js:176"
        },
        {
            "message": "Missing item type\nClear the full context.",
            "line": " src/html/layer.js:184"
        },
        {
            "message": "Missing item type\nMerge two layers.",
            "line": " src/html/layer.js:192"
        },
        {
            "message": "Missing item type\nSet the fill and stroke style of the context.",
            "line": " src/html/layer.js:208"
        },
        {
            "message": "Missing item type\nDisplay the layer.",
            "line": " src/html/layer.js:217"
        },
        {
            "message": "Missing item type\nAlign on another layer.",
            "line": " src/html/layer.js:238"
        },
        {
            "message": "Missing item type\nGet the value of the image at a specific coordinate.",
            "line": " src/image/image.js:238"
        },
        {
            "message": "Missing item type\nGet the value of the image at a specific offset.",
            "line": " src/image/image.js:253"
        },
        {
            "message": "Missing item type\nGet the value of the image at a specific coordinate.",
            "line": " src/image/image.js:264"
        },
        {
            "message": "Missing item type\nCalculate the raw image data range.",
            "line": " src/image/image.js:277"
        },
        {
            "message": "Missing item type\nCalculate the image data range after rescale.",
            "line": " src/image/image.js:295"
        },
        {
            "message": "Missing item type\nCalculate the histogram of the image.",
            "line": " src/image/image.js:306"
        },
        {
            "message": "Missing item type\nConvolute the image with a given 2D kernel.",
            "line": " src/image/image.js:333"
        },
        {
            "message": "Missing item type\nTransform an image using a specific operator.",
            "line": " src/image/image.js:386"
        },
        {
            "message": "Missing item type\nCompose this image with another one and using a specific operator.",
            "line": " src/image/image.js:404"
        },
        {
            "message": "Missing item type\nLookup tables for image color display.",
            "line": " src/image/luts.js:95"
        },
        {
            "message": "Missing item type\nGet data from an input image using a canvas.",
            "line": " src/image/reader.js:6"
        },
        {
            "message": "Missing item type\nGet data from an input buffer using a DICOM parser.",
            "line": " src/image/reader.js:55"
        },
        {
            "message": "Missing item type\nSet the view window/level.",
            "line": " src/image/view.js:86"
        },
        {
            "message": "Missing item type\nSet the image window/level to cover the full data range.",
            "line": " src/image/view.js:98"
        },
        {
            "message": "Missing item type\nIncrement the current slice number.\nReturns false if not in bounds.",
            "line": " src/image/view.js:114"
        },
        {
            "message": "Missing item type\nDecrement the current slice number.\nReturns false if not in bounds.",
            "line": " src/image/view.js:126"
        },
        {
            "message": "Missing item type\nClone the image using all meta data and the original data buffer.",
            "line": " src/image/view.js:138"
        },
        {
            "message": "Missing item type\nGenerate display image data to be given to a canvas.",
            "line": " src/image/view.js:151"
        },
        {
            "message": "Missing item type\nAdd an event listener on the view.",
            "line": " src/image/view.js:235"
        },
        {
            "message": "Missing item type\nRemove an event listener on the view.",
            "line": " src/image/view.js:247"
        },
        {
            "message": "Missing item type\nFire an event: call all associated listeners.",
            "line": " src/image/view.js:263"
        },
        {
            "message": "Missing item type",
            "line": " src/math/scissors.js:11"
        },
        {
            "message": "Missing item type",
            "line": " src/math/scissors.js:67"
        },
        {
            "message": "Missing item type",
            "line": " src/math/scissors.js:107"
        },
        {
            "message": "Missing item type",
            "line": " src/tools/filter.js:71"
        },
        {
            "message": "Missing item type\nAdd a command to the stack.",
            "line": " src/tools/undo.js:17"
        },
        {
            "message": "Missing item type\nUndo the last command.",
            "line": " src/tools/undo.js:33"
        },
        {
            "message": "Missing item type\nRedo the last command.",
            "line": " src/tools/undo.js:67"
        },
        {
            "message": "Missing item type",
            "line": " src/tools/windowLevel.js:6"
        },
        {
            "message": "Missing item type\nroot?key0=val0&key1=val1 returns [{\"key\"=\"key0\", \"value\"=\"val0\"}, {\"key\"=\"key1\", \"value\"=\"val1\"}]\nReturns null if not a query string (no question mark).",
            "line": " src/utils/string.js:27"
        },
        {
            "message": "Missing item type\nInitialise the HTML for the application.",
            "line": " src/application.js:67"
        },
        {
            "message": "Missing item type\nHandle key event.\n- CRTL-Z: undo\n- CRTL-Y: redo\nDefault behavior. Usually used in tools.",
            "line": " src/application.js:84"
        },
        {
            "message": "Missing item type",
            "line": " src/application.js:103"
        },
        {
            "message": "Missing item type",
            "line": " src/application.js:111"
        },
        {
            "message": "Missing item type",
            "line": " src/application.js:188"
        },
        {
            "message": "Missing item type",
            "line": " src/application.js:196"
        },
        {
            "message": "Missing item type\nGenerate the image data and draw it.",
            "line": " src/application.js:272"
        },
        {
            "message": "Missing item type\nTo be called once the image is loaded.",
            "line": " src/application.js:285"
        },
        {
            "message": "Missing item type\nTo be called once the image is loaded.",
            "line": " src/application.js:306"
        },
        {
            "message": "Missing item type\nToggle the display of the info layer.",
            "line": " src/application.js:315"
        },
        {
            "message": "Missing item type\nAdd image listeners.",
            "line": " src/application.js:336"
        },
        {
            "message": "Missing item type\nRemove image listeners.",
            "line": " src/application.js:348"
        },
        {
            "message": "Missing item type",
            "line": " src/application.js:360"
        },
        {
            "message": "Missing item type",
            "line": " src/application.js:435"
        },
        {
            "message": "Missing item type",
            "line": " src/application.js:445"
        },
        {
            "message": "Missing item type",
            "line": " src/application.js:470"
        },
        {
            "message": "Missing item type",
            "line": " src/application.js:498"
        }
    ]
}